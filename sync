#!/usr/bin/env bash

set -euo pipefail

die() {
	>&2 echo "FATAL: ${@:-UNKNOWN FATAL ERROR}"
}

cleanup() {
	[ -z "${TMPDIR:-}" ] || [ ! -d "${TMPDIR}" ] || rm -rf "${TMPDIR}"
	unset TMPDIR
}

gettmp() {
	[ -n "${TMPDIR:-}" ] || TMPDIR="$(mktemp -d /tmp/homedirsync.XXXXXX)" || die "Could not create temporary directory."
}

[ -z "${DEBUG+x}" ] || { >&2 echo "DEBUG environment variable set. Enabling debugging."; set -x; }
trap cleanup EXIT
dir="$(dirname "${0}")"

[ -n "${dir}" ] || die "Cannot determin path to repository."

force=0

while [ -n "${1:-}" ]; do
	case "${1}" in
		-f)
				force=1
				;;
	esac
	shift
done

while IFS='' read -r line; do
	[ -n "${line}" ] || continue
	src="$(echo "${line}" | cut -d\| -f 1)"
	dst="$(echo "${line}" | cut -d\| -f 2)"
	dst="${dst/#\~/$HOME}"
	echo "Linking \"${src}\" to \"${dst}\""

	tmpfile=""
	if [ -e "${dst}" ] && [ "${force}" -ne "0" ]; then
		gettmp
		tmpfile="${TMPDIR}/$(basename "${dst}")"
		mv "${dst}" "${tmpfile}" || { >&2 echo "Could not move destination file \"${dst}\" out of the way. Skipping."; continue; }
	fi

	if [ ! -e "${dst}" ]; then
		ret=0
		ln -s "$(realpath "${dir}")/${src}" "${dst}" || ret="${?}"
		if [ "${ret}" != "0" ] && [ -n "${tmpfile}" ]; then
			>&2 echo "Failed symlinking of \"${src}\" to \"${dst}\". Moving old file back into place."
			mv "${tmpfile}" "${dst}" || >&2 "Failed moving old file back into place."
		fi
	else
		>&2 echo "Destination \"${dst}\" exists. Not overwriting without force (-f) option."
	fi
done <<< "$(cat ${dir}/mapping | sed 's/#.*//; /^[[:space:]]*$/d')"
